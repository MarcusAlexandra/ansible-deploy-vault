---

- name: template Cluster Config| {{ item }}
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: '0644'
  with_items:
    - { src: 'etcd.conf.j2', dest: '/etc/etcd/etcd.conf' }
  when: ansible_hostname is search('usctvletcd0(1|2|3)v')

- name: Create ssh directory
  file:
    dest: "{{ item }}"
    mode: 0755
    state: directory
    owner: etcd
    group: etcd
  with_items:
    - /apps/etcd
    - /apps/etcd/vault-etcd.io

# - import_tasks: generate-cfssL-certs.yml

- name: Copy etcd Agent kitchenCI ssh keys
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  with_items:
    - { src: 'cfsslCerts/', dest: '{{ cert_dir }}', owner: 'root', group: 'etcd', mode: '0660' }
  when: ansible_hostname is search('usctvletcd0(1|2|3)v')


- name: service | {{ item }}
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items:
    - [ 'etcd' ]
  tags: etcdService

# - name: template Cluster Config| {{ item }}
#   template:
#     src: "{{ item.src }}"
#     dest: "{{ item.dest }}"
#     owner: root
#     group: root
#     mode: '0644'
#   with_items:
#     - { src: 'k8ms_etcd.conf.j2', dest: '/etc/etcd/etcd.conf' }
#   when: ansible_hostname is search('usctvletcd0(1|2|3)v')

- name: Wait for etcdService startup
  wait_for:
    timeout: 30
  delegate_to: localhost

- name: Check flannel network configuration
  shell: etcdctl --endpoints=https://{{ ansible_fqdn }}:{{ port }} --cert-file {{ cert_dir }}/{{ server_cert }} --key-file {{ cert_dir }}/{{  server_key }} --ca-file {{ cert_dir }}/{{ ca_cert }} get /curbStoneOps.io/network/config
  register: etcdctl_get
  ignore_errors: true
  when: ansible_hostname is search('usctvletcd0(1)v')

#
# TODO https://coreos.com/flannel/docs/latest/backends.html
#

- name: Define flannel network configuration in etcd
  shell: 'etcdctl --endpoints=https://{{ ansible_fqdn }}:{{ port }} --cert-file {{ cert_dir }}/{{ server_cert }} --key-file {{ cert_dir }}/{{  server_key }} --ca-file {{ cert_dir }}/{{ ca_cert }} mk /curbStoneOps.io/network/config
    "{
    "Network": "10.254.0.0/16",
    "SubnetLen": "24",
    "SubnetMin": "10.254.50.0",
    "SubnetMax": "10.254.199.0",
    "Backend": {
      "Type": "vxlan",
      "VNI": "1"
      }
    }"'
  args:
    creates: /curbStoneOps.io/network/config '{"Network":"10.254.0.0/16"}'
  register: create_etcdctl
  when: ansible_fqdn is search('usctvletcd01v')
  # when: etcdctl_get.rc != 0 and   (ansible_fqdn | search("ssi-centos7-k8[m-n]s-etcd-1.ssi.com"))

- name: List etcdctl value
  shell: 'etcdctl --endpoints=https://{{ ansible_fqdn }}:{{ port }} --cert-file {{ cert_dir }}/{{ server_cert }} --key-file {{ cert_dir }}/{{  server_key }} --ca-file {{ cert_dir }}/{{ ca_cert }} ls /curbStoneOps.io/network/config'
  register: etcdctl_show
  when: ansible_hostname is search('usctvletcd0(1)v')

- debug:
     var: etcdctl_show

- debug:
    var: create_etcdctl

  notify:
    - service etcd restart
