---
- name: set_fact | local_fqdn
  tags: always
  set_fact:
    local_fqdn: "{{ inventory_hostname }}"
  when: inventory_hostname != 'localhost'

- debug: msg="{{role_path}}"

- stat:
    path: "{{ cert_dir }}"
  register: p

- debug:
    msg: "Directory {{ cert_dir }} directory exists"
  when: p.stat.isdir is defined and p.stat.isdir
  ignore_errors: false

- name: file | {{ item.dst }}
  file:
    dest={{ item.dst }}
    mode={{ item.mode }}
    state={{ item.state }}
    group={{ item.group }}
  with_items:
    - { dst: '{{ cert_dir }}', mode: '0750', state: directory, group: etcd }

- name: file | copy cfSSL
  tags: copy_cfSSL
  copy:
    src={{role_path}}/files/{{ item.src }}
    dest={{ item.dest }}
    mode={{ item.mode }}
  with_items:
    - { src: 'make-etcd-cacert.sh', dest: '{{ cert_dir }}/make-etcd-cacert.sh', owner: 'root', group: 'root', mode: '0755' }
  when: ansible_fqdn is search('utrutstetcd01v')

- name: file | verify etcd_certs
  shell: 'ls {{ cert_dir }}/{server,client,peer}.{crt,key} {{ cert_dir }}/ca.crt'
  no_log: true
  ignore_errors: true
  register: etcd_certs

- debug:
    msg: "{{ ansible_domain }} {{ host['ip'][0] }}, {{ host['ip'][1] }}, {{ host['ip'][2] }}, {{ host['name'][0] }}, {{ host['name'][1] }}, {{ host['name'][2] }}"

- name: cfSSL Generate etcd_cacerts
  shell: "{{ cert_dir }}/make-etcd-cacert.sh {{ ansible_domain }} {{ host['ip'][0] }} {{ host['ip'][1] }} {{ host['ip'][2] }} {{ host['name'][0] }} {{ host['name'][1] }} {{ host['name'][2] }}"
  args:
    chdir: "{{ cert_dir }}"
  when: etcd_certs.rc != 0 and ansible_fqdn is search('utrutstetcd01v')
...
