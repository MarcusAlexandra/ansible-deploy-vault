--- 
- hosts: all
  gather_facts: true
  become: true
  become_user: root
  become_method: sudo
  tags: always

  # ansible-vault encrypt_string `openssl passwd -1 MarcusGarvey

  vars:
    vaultUrl: http://10.13.3.10:8200/v1/kv/ansible-tC-pass
    vaultUrlPort: 8200

    vault_user: "vault"
    vault_group: "vault"
    vault_home: "/apps/{{vault_user}}"
    vault_data: "{{ vault_home }}/data"
    vault_user_id: "1203"

    newUserPass: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      65343332653434303231346233643438303639363862393939323866333239326436323037356230
      6264393230353835396632323533343337373037303536330a626238376132396132363438373637
      62373538663031663665393765336133316561303064333931366661663034333534633332383335
      6332636533393738300a313036653938663134623634376237366535653931386266653332336461
      63663866383336306133326133303566393465643066613631633461326331323330396138363533
      3261343663326631643938343664613766346430663632633336

  pre_tasks:
    - name: Get Root Token
      shell: cat /etc/vault/initfile | jq -r '.root_token'
      ignore_errors: true
      args:
        warn: false
      register: unSealToken

    #- debug:
    #    msg: "Unseal Token {{unSealToken.stdout}}"

    - name: Get User Vault Password
      uri:
        url: "{{ vaultUrl }}"
        method: GET
        headers:
          Content-Type: "application/json"
          X-Vault-Token: '{{unSealToken.stdout}}'
        status_code: 200
        force_basic_auth: yes
      register: ansibleVault
      #when: vaultSealStatus.stdout == 'false

    #- debug:
    #    msg: "{{ ansibleVault.json.data.value }}"

    - name: Write Vault Values to file
      lineinfile:
        create: yes
        dest: /tmp/.vaultUserpass
        state: present
        line: "{{ ansibleVault.json.data.value }}"

  tasks:

    - name: Add group {{ user }}
      group:
        name: "{{ vault_user }}"
        gid: "{{ vault_user_id }}"
        state: present

    - name: Add user {{ user }}
      user:
        name: "{{ vault_user }}"
        uid: "{{ vault_user_id }}"
        group: "{{ vault_group }}"
        password: "{{ newUserPass }}"
        home: "/apps/{{ vault_user }}"
        shell: /bin/bash
        skeleton: /etc/skel
        create_home: yes
      tags: [ 'vault_user', 'vault_installdir' ]
